{"version":3,"sources":["../src/queries.js"],"names":["Pool","require","pool","user","host","database","password","port","getUsers","request","respond","query","error","results","response","status","json","rows","getUserById","id","parseInt","params","createUser","body","name","email","send","result","insertId","updateUser","deleteUser","module","exports"],"mappings":";;AAAA,IAAMA,OAAOC,QAAQ,IAAR,EAAcD,IAA3B;AACA,IAAME,OAAO,IAAIF,IAAJ,CAAS;AAClBG,UAAM,IADY;AAElBC,UAAM,WAFY;AAGlBC,cAAU,KAHQ;AAIlBC,cAAU,UAJQ;AAKlBC,UAAM;AALY,CAAT,CAAb;;AAQA,IAAMC,WAAW,SAAXA,QAAW,CAACC,OAAD,EAAUC,OAAV,EAAsB;AACnCR,SAAKS,KAAL,CAAW,qCAAX,EAAkD,UAACC,KAAD,EAAQC,OAAR,EAAoB;AAClE,YAAID,KAAJ,EAAW;AACP,kBAAMA,KAAN;AACH;AACDE,iBAASC,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0BH,QAAQI,IAAlC;AACH,KALD;AAMH,CAPD;;AASA,IAAMC,cAAc,SAAdA,WAAc,CAACT,OAAD,EAAUK,QAAV,EAAuB;AACvC,QAAMK,KAAKC,SAASX,QAAQY,MAAR,CAAeF,EAAxB,CAAX;;AAEAjB,SAAKS,KAAL,CAAW,mCAAX,EAAgD,CAACQ,EAAD,CAAhD,EAAsD,UAACP,KAAD,EAAQC,OAAR,EAAoB;AACtE,YAAID,KAAJ,EAAW;AACP,kBAAMA,KAAN;AACH;AACDE,iBAASC,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0BH,QAAQI,IAAlC;AACH,KALD;AAMH,CATD;;AAWA,IAAMK,aAAa,SAAbA,UAAa,CAACb,OAAD,EAAUK,QAAV,EAAuB;AAAA,wBACdL,QAAQc,IADM;AAAA,QAC9BC,IAD8B,iBAC9BA,IAD8B;AAAA,QACxBC,KADwB,iBACxBA,KADwB;;;AAGtCvB,SAAKS,KAAL,CAAW,iDAAX,EAA8D,CAACa,IAAD,EAAOC,KAAP,CAA9D,EAA6E,UAACb,KAAD,EAAQC,OAAR,EAAoB;AAC7F,YAAID,KAAJ,EAAW;AACP,kBAAMA,KAAN;AACH;AACDE,iBAASC,MAAT,CAAgB,GAAhB,EAAqBW,IAArB,0BAAiDC,OAAOC,QAAxD;AACH,KALD;AAMH,CATD;;AAWA,IAAMC,aAAa,SAAbA,UAAa,CAACpB,OAAD,EAAUK,QAAV,EAAuB;AACtC,QAAMK,KAAKC,SAASX,QAAQY,MAAR,CAAeF,EAAxB,CAAX;AADsC,yBAEdV,QAAQc,IAFM;AAAA,QAE9BC,IAF8B,kBAE9BA,IAF8B;AAAA,QAExBC,KAFwB,kBAExBA,KAFwB;;;AAItCvB,SAAKS,KAAL,CACI,sDADJ,EAEI,CAACa,IAAD,EAAOC,KAAP,EAAcN,EAAd,CAFJ,EAGI,UAACP,KAAD,EAAQC,OAAR,EAAoB;AAChB,YAAID,KAAJ,EAAW;AACP,kBAAMA,KAAN;AACH;AACDE,iBAASC,MAAT,CAAgB,GAAhB,EAAqBW,IAArB,6BAAoDP,EAApD;AACH,KARL;AAUH,CAdD;;AAgBA,IAAMW,aAAa,SAAbA,UAAa,CAACrB,OAAD,EAAUK,QAAV,EAAuB;AACtC,QAAMK,KAAKC,SAASX,QAAQY,MAAR,CAAeF,EAAxB,CAAX;;AAEAjB,SAAKS,KAAL,CAAW,iCAAX,EAA8C,CAACQ,EAAD,CAA9C,EAAoD,UAACP,KAAD,EAAQC,OAAR,EAAoB;AACpE,YAAID,KAAJ,EAAW;AACP,kBAAMA,KAAN;AACH;AACDE,iBAASC,MAAT,CAAgB,GAAhB,EAAqBW,IAArB,4BAAmDP,EAAnD;AACH,KALD;AAMH,CATD;;AAWAY,OAAOC,OAAP,GAAiB;AACbxB,sBADa;AAEbU,4BAFa;AAGbI,0BAHa;AAIbO,0BAJa;AAKbC;AALa,CAAjB","file":"queries.js","sourcesContent":["const Pool = require('pg').Pool\nconst pool = new Pool({\n    user: 'me',\n    host: 'localhost',\n    database: 'api',\n    password: 'password',\n    port: 5432,\n})\n\nconst getUsers = (request, respond) => {\n    pool.query('SELECT * FROM users ORDER BY id ASC', (error, results) => {\n        if (error) {\n            throw error\n        }\n        response.status(200).json(results.rows)\n    })\n}\n\nconst getUserById = (request, response) => {\n    const id = parseInt(request.params.id)\n\n    pool.query('SELECT * FROM users WHERE id = $1', [id], (error, results) => {\n        if (error) {\n            throw error\n        }\n        response.status(200).json(results.rows)\n    })\n}\n\nconst createUser = (request, response) => {\n    const { name, email } = request.body\n\n    pool.query('INSERT INTO users (name, email) VALUES ($1, $2)', [name, email], (error, results) => {\n        if (error) {\n            throw error\n        }\n        response.status(201).send(`User added with ID: ${result.insertId}`)\n    })\n}\n\nconst updateUser = (request, response) => {\n    const id = parseInt(request.params.id)\n    const { name, email } = request.body\n\n    pool.query(\n        'UPDATE users SET name = $1, email = $2 WHERE id = $3',\n        [name, email, id],\n        (error, results) => {\n            if (error) {\n                throw error\n            }\n            response.status(200).send(`User modified with ID: ${id}`)\n        }\n    )\n}\n\nconst deleteUser = (request, response) => {\n    const id = parseInt(request.params.id)\n\n    pool.query('DELETE FROM users WHERE id = $1', [id], (error, results) => {\n        if (error) {\n            throw error\n        }\n        response.status(200).send(`User deleted with ID: ${id}`)\n    })\n}\n\nmodule.exports = {\n    getUsers,\n    getUserById,\n    createUser,\n    updateUser,\n    deleteUser,\n}\n\n\n"]}